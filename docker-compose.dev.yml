name: ticketing-project

services:
  # Application
  app:
    container_name: ticketing-app-container
    working_dir: /app
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./build/libs:/app
    ports:
      - "${SERVER_PORT}:8080"
    env_file:
      - .env
    depends_on:
      - mysql
      - redis
      - rabbitmq
    environment:
      JAVA_HOME: /opt/java/openjdk
      PATH: /opt/java/openjdk/bin:$PATH
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '4.0'
        reservations:
          memory: 4G
          cpus: '2.0'

  # Database
  mysql:
    image: mysql:latest
    container_name: mysql-container
    restart: always
    ports:
      - "${MYSQL_PORT}:3306"
    env_file:
      - .env
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 5s
      retries: 10
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '4.0'
        reservations:
          memory: 2G
          cpus: '2.0'


  # Message Queue
  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq-container
    restart: always
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "${RABBITMQ_PORT_UI}:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    env_file:
      - .env
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  # Cache
  redis:
    image: redis:latest
    container_name: redis-container
    restart: always
    ports:
      - "${REDIS_PORT}:6379"
    env_file:
      - .env
    volumes:
      - redis_data:/data

  # Tunneling
  ngrok:
    image: ngrok/ngrok
    container_name: ngrok-container
    network_mode: host
    command: [ "http", "--url=${NGROK_DOMAIN}", "host.docker.internal:${SERVER_PORT}" ]
    ports:
      - "${NGROK_PORT}:4040"
    env_file:
      - .env
    depends_on:
      - app

  # Monitoring
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor-container
    privileged: true
    restart: unless-stopped
    ports:
      - "${CADVISOR_PORT}:8080"
    env_file:
      - .env
    volumes:
      - /:/rootfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro

volumes:
  mysql_data:
  redis_data:
  rabbitmq_data:
